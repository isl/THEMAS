Copyright 2015 Institute of Computer Science,
               Foundation for Research and Technology - Hellas.

Licensed under the EUPL, Version 1.1 or - as soon they will be approved
by the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at:

http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and limitations
under the Licence.

Contact:  POBox 1385, Heraklio Crete, GR-700 13 GREECE
Tel:+30-2810-391632
Fax: +30-2810-391638
E-mail: isl@ics.forth.gr
http://www.ics.forth.gr/isl

Authors: Elias Tzortzakakis <tzortzak@ics.forth.gr>


This file is part of the THEMAS system.

=============================================================================
THEMAS 1.3 Release notes (intermediate-release of version 2.0)
=============================================================================
- XML version exported in XML export schema
- added url rewrite module in order to respond 
  to SKOS export uris with XML e.g. http://139.91.183.91:8084/THEMAS/BBT/Facet/6  
  Rules defined in /WEB-INF/urlrewrite.xml
  Supposing that SKOS export uris have been 
  produced using the default namespace values
- Using the reduced scope note complexity 
  functions of Neo4j-sisapi
- Removed TSV files from THEMAS - more appropriate is 
  to be released together with each Neo4j-sisapi version.
  (also removed TSV language dependency - 
  Adding configuration parameter about the UNCLASSIFIED 
  TERMS facet in config.xml)
- Added import xml xsd file
- Skos Export Adaptations to be more close to the BBT 
  and to be able to define concept scheme and target 
  namespace
- Transliteration search enabled in UFs and Translation terms
- THEMAS Users may be applied access to all 
  thesauri via * instead of thesarus name
- ability to change UIlanguage at login Page
- Created servlet that receives a Thesaurus Name and 
  Thesaurus Reference Id and responds with metadata such 
  as name and Type (Facet / TOP TERM / TERM) + responseCode 
  (success / not found /unauthorized access etc.)
- increased thesaurus field width
- GDPR texts (Conditions of Use + Privacy policy added) 
- Added the XMLStream ability for the 
  hierarchical representation of multiple hierarchies
- External links supported in import/Export functionalities (not in UI yet)
- Type ahead ajax improvement 

=============================================================================
THEMAS 1.2.1 Release Notes
=============================================================================
- Update to Java 8 / Neo4j 3.2.5 / Neo4j-sisapi 1.2.1
- Each Term/TopTerm/Facet created is assigned a reference Id unique per thesaurus
  and a transliteration of the logicalname according to configurations in config.xml.
  This transliteration will be used for custom sorting and case&tone incensitive search.
  (Transliteration request occurred as a result of the need to support polytonic greek punctuation)
- Each XML exported contains the referenceId added to each term
- Thesaurus and Facet Hierarchical and Tree View
- Searching with Contains operator uses the transliteration field whenever referring to Terms/Hierarchies/Facets
- SKOS export now uses this reference Id instead of a random number or the first taxonomical code
- External reader role added (In contrast with reader role 
  ExternalReader sees all terms including non published)
- XMLStream mode was added for specific read-only Servlets so that External Readers 
  (if having access) can retrieve thesaurus data in XML format as a Service
- Type ahead mechanism added in order to assist the selection in large lists (e.g. bts at term creation etc.)
- Thesauri Management Tab was changed to be only available
  to administrators until the copy/merge/delete functionalities are corrected
- Increased Thesaurus name max length to 20 and allowed _ and - chars
- Resolved Bug with starts with operator
- Resolved Bug in Translations Synchronization
- Resolved Thesaurus Deletion bug
- Resolved Thesaurus Import With Initialize DB bug
- Ubuntu support changes


-----------------------------------------------------------------------------
THEMAS version 1.1 (not officially released)
-----------------------------------------------------------------------------
- Bug Fixes (corrected messages, removed hard coded messages, removePrefix bugfix etc.)
- Removed length control in term names scopenotes etc.
- Added html editor for comment categories

-----------------------------------------------------------------------------
THEMAS 1.0 Release Notes
-----------------------------------------------------------------------------

The THEMAS system (Thesaurus Management System) is a Web 
based graphical interface for creating and managing multi-
faceted multilingual thesauri with Greek or English language 
serving as the dominant language and a configurable number 
of reference translation languages. Neo4j open source graph 
database (http://neo4j.com/) is used in the backend for data 
storage, Neo4j-sisapi v1.0 (https://github.com/isl/Neo4j-sisapi/tree/v1.0) 
for the interaction with the database and TELOS [1,2,3] 
representation language stuctures are used as reference for 
the thesauri structure.

The underlying Neo4j Database works in embedded mode and 
the neo4j jar files used for the database access come from
the Neo4j graph database version 2.2.5 community edition.

The Data Model used in Neo4j database follows the Telos language 
representational framework specifications where the following 
implementation decisions were made:

- One Neo4j Node is created for each of the 4 Telos building blocks 
  (Individual class, Individual Token, Attribute Class, Attribute Token)
  
- Each Node has one and unique Neo4j Id and one Logical name which is not
  necessarily unique

- Level and Type of each TELOS building block are stored as Neo4j Labels
  
- Instance Of, Isa, From and To relations from Telos are stored as Neo4j Relationships
  
- Primitive Values (and Types) are stored as Neo4j Properties in Attribute Nodes




[1] Mylopoulos, J., Borgida, A.T., Jarke, M., & Koubarakis, M. (1990). 
	TELOS : Representing Knowledge About Information Systems. 1990
	http://www.cs.toronto.edu/~jm/Pub/Telos.pdf
	http://www.ics.forth.gr/tech-reports/1990/1990.TR024_Representing_Knowledge_Information_Systems.pdf
		
[2] Koubarakis, M., Mylopoulos, J., Stanley, M., & Borgida, A.T. (1989). 
	Telos : Features and Formalization. 1989
	http://www.ics.forth.gr/tech-reports/1989/1989.TR018_TELOS_Features_Formalization.pdf	
	
[3] Koubarakis, M., Mylopoulos, J., Stanley, M., & Jarke, M. (1988). 
	Telos : A Knowledge Representation Language for Requirements Modelling. 1988
	http://www.ics.forth.gr/tech-reports/1988/1988.TR016_Language_TELOS.pdf

